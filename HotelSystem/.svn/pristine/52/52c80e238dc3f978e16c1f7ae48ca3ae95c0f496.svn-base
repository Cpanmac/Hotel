package com.system.servlet;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.system.utils.StringToDate;
import com.system.utils.StringUtils;
@WebServlet("/order")
public class OrderServlet extends HttpServlet{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	@Override
	protected void service(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		// TODO Auto-generated method stub
		req.setCharacterEncoding("UTF-8");
		resp.setContentType("text/html; charset=UTF-8");
		
		 PrintWriter out = resp.getWriter();
		 
		 String cusName = req.getParameter("cusName");
		 String IDNum = req.getParameter("IDNum");
		 String telNum = req.getParameter("telNum");
		 
		 String Bdate = req.getParameter("date1");
		 String Adate = req.getParameter("date2");
		 long time1 = 0L;
		 //Sutil有长度，赋值
		 if(StringUtils.hasLength(Bdate)){
			 time1 = StringToDate.toSqlTimestamp(Bdate).getTime();
		 }
		 long time2 = 0L;
		 //Sutil有长度，赋值
		 if(StringUtils.hasLength(Adate)){
			 time2 = StringToDate.toSqlTimestamp(Adate).getTime();
		 }
		 long i = (time2-time1)/86400000;
		 out.print(i);
		 req.setAttribute("lifeTime", i);
		 System.out.println(i);
		 
		/* //验证手机号码是否正确
		 String regex = "^((13[0-9])|(14[5|7])|(15([0-3]|[5-9]))|(18[0,5-9]))\\d{8}$"; 
		 if(StringUtils.hasLength(telNum)){
			 req.setAttribute("errorMsg1", "亲，请输入手机号码");
			 req.getRequestDispatcher("/order.jsp").forward(req, resp);
		 }
		 if(!telNum.matches(regex)){
			 req.setAttribute("errorMsg1", "亲，请输入11位的手机号码");
			 req.getRequestDispatcher("/order.jsp").forward(req, resp);
		 }*/
		  
		 /*//验证身份证号是否正确
		 String idnum="^(\\d{6})(19|20)(\\d{2})(1[0-2]|0[1-9])(0[1-9]|[1-2][0-9]|3[0-1])"
		 		+ "(\\d{3})(\\d|X|x)?$";
		 if(!IDNum.matches(idnum)){
			 req.setAttribute("errorMsg2", "亲，您输入的身份证号码格式错误");
			  req.getRequestDispatcher("/order.jsp").forward(req, resp);
		 }*/
		 
		  String randomCode = req.getParameter("randomCode");
		  
		  String sessionRandomCode =(String) req.getSession().getAttribute("RANDOMCODE_IN_SESSION");
		
		  if(!StringUtils.hasLength(randomCode) || !StringUtils.hasLength(sessionRandomCode)){
			  req.setAttribute("errorMsg", "亲，验证码不能为空请重新输入");
			  req.getRequestDispatcher("/order.jsp").forward(req, resp);
			  return;
		  }
		  if(!randomCode.equals(sessionRandomCode)){
			  req.setAttribute("errorMsg", "亲，验证码有误请重新输入");
			  req.getRequestDispatcher("/order.jsp").forward(req, resp);
			  return;
		  }
		  
		  req.getRequestDispatcher("/order.jsp").forward(req, resp);
		 
	}
	

}
